(()=>{"use strict";var n={772:(n,e,r)=>{r.d(e,{Z:()=>g});var t=r(537),a=r.n(t),o=r(645),i=r.n(o),c=r(667),d=r.n(c),s=new URL(r(374),r.b),A=new URL(r(33),r.b),u=new URL(r(750),r.b),l=i()(a()),f=d()(s),m=d()(A),p=d()(u);l.push([n.id,"*,\r\n*::before,\r\n*::after {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n@font-face {\r\n    font-family: New Cursive;\r\n    src: url("+f+");\r\n}\r\n\r\n@font-face {\r\n    font-family: InterTight;\r\n    src: url("+m+");\r\n}\r\n\r\n\r\n\r\n:root {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n\r\nbody {\r\n    height: 100%;\r\n    width: 100%;\r\n    background: #fda4af;\r\n    background-image: url("+p+");\r\n    background-position: 90%;\r\n    background-repeat: no-repeat;\r\n    background-size: 500px 500px;\r\n\r\n}\r\n\r\n\r\n#content {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-rows: 0.1fr 1fr;\r\n}\r\n\r\n.header-container {\r\n    grid-column: 1 / -1;\r\n    color: white;\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-size: clamp(1rem, 0.8475rem + 0.6780vw, 1.5rem);\r\n    font-weight: bold;\r\n    padding: 1em 4em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    box-shadow: 2px 2px 6px #6b7280;\r\n    background-color: #fb7185;\r\n\r\n}\r\n\r\n.header-container span {\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-weight: bold;\r\n}\r\n\r\n.tab-container {\r\n    display: flex;\r\n    padding-left: 2em;\r\n    gap: 3em;\r\n}\r\n\r\n\r\nli {\r\n    list-style: none;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n    color: #f43f5e;\r\n}\r\n\r\n.icon-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75em;\r\n}\r\n\r\n.header-icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(307deg) brightness(107%) contrast(101%);\r\n}\r\n\r\n.header-icon:hover {\r\n    cursor: pointer;\r\n    filter: invert(35%) sepia(73%) saturate(2798%) hue-rotate(328deg) brightness(99%) contrast(94%);\r\n}\r\n\r\n.header-button,\r\n.body-button {\r\n    color: white;\r\n    background-color: orange;\r\n    height: 2.5rem;\r\n    width: 9rem;\r\n    border-radius: 20px;\r\n    border: none;\r\n    font-weight: bold;\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.header-button:hover,\r\n.body-button:hover {\r\n    cursor: pointer;\r\n    background-color: #f43f5e;\r\n    box-shadow: 0px 0px 15px lightcyan;\r\n}\r\n\r\n[data-tab] {\r\n    display: none;\r\n}\r\n\r\n\r\n[data-tab=\"1\"].active {\r\n    grid-row: 2 / -1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5em;\r\n    margin-top: 5%;\r\n    padding: 1em 96px;\r\n    color: white;\r\n\r\n}\r\n\r\n#body-title {\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-size: 3.5rem;\r\n}\r\n\r\n.body-description {\r\n    font-size: 1.5rem;\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    max-width: 65ch;\r\n}\r\n\r\n\r\n[data-tab=\"2\"].active {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(102, 102, 102, 0.6);\r\n\r\n\r\n}\r\n\r\n.menu-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, minmax(auto, 1fr));\r\n    grid-auto-rows: repeat(3, minmax(auto, 1fr));\r\n    grid-gap: 0.5em;\r\n    padding: 1.5em;\r\n    width: 100%;\r\n\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 250px;\r\n    width: 400px;\r\n    border-radius: 20px;\r\n    border: 2px solid black;\r\n    background-color: #fecdd3;\r\n    padding: 1em;\r\n    gap: 1.5em;\r\n}\r\n\r\n.card img {\r\n    width: 200px;\r\n    height: 150px;\r\n}\r\n\r\n.card p {\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n}\r\n\r\n\r\n.card:hover img {\r\n    cursor: pointer;\r\n    animation: tilt-shaking 0.25s infinite;\r\n}\r\n\r\n.card:hover {\r\n    cursor: pointer;\r\n    background-color: rgba(102, 102, 102, 0.6);\r\n}\r\n\r\n@keyframes tilt-shaking {\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    25% {\r\n        transform: rotate(5deg);\r\n    }\r\n\r\n    50% {\r\n        transform: rotate(0eg);\r\n    }\r\n\r\n    75% {\r\n        transform: rotate(-5deg);\r\n    }\r\n\r\n    100% {\r\n        transform: rotate(0deg);\r\n    }\r\n}\r\n\r\n\r\n\r\n[data-tab=\"3\"].active {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    color: white;\r\n}\r\n\r\n\r\n.about-container {\r\n    grid-column: 1;\r\n    grid-row: 1 / 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1.5em;\r\n    padding: 2em;\r\n}\r\n\r\n.about-container h1 {\r\n    font-size: clamp(1.5rem, 1.0500rem + 2.0000vw, 3rem);\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.about-container p {\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-size: clamp(1rem, 0.7000rem + 1.3333vw, 2rem);\r\n    max-width: 50ch;\r\n}\r\n\r\n\r\n.location-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1.5em;\r\n    padding: 2em;\r\n    grid-column: 2;\r\n    grid-row: 1 / 3;\r\n}\r\n\r\n.location-info-container {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    background-color: #fecdd3;\r\n    border-radius: 10px;\r\n    border: 2px solid black;\r\n    text-align: center;\r\n}\r\n\r\n.map-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.map-container h1 {\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:["*,\r\n*::before,\r\n*::after {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n@font-face {\r\n    font-family: New Cursive;\r\n    src: url('../fonts/AnandaBlackPersonalUseRegular-rg9Rx.ttf');\r\n}\r\n\r\n@font-face {\r\n    font-family: InterTight;\r\n    src: url('../fonts/InterTight-VariableFont_wght.ttf');\r\n}\r\n\r\n\r\n\r\n:root {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n\r\nbody {\r\n    height: 100%;\r\n    width: 100%;\r\n    background: #fda4af;\r\n    background-image: url('../icons/toppng.com-the-best-belgian-waffles-waffle-clipart-715x1014.png');\r\n    background-position: 90%;\r\n    background-repeat: no-repeat;\r\n    background-size: 500px 500px;\r\n\r\n}\r\n\r\n\r\n#content {\r\n    height: 100%;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-rows: 0.1fr 1fr;\r\n}\r\n\r\n.header-container {\r\n    grid-column: 1 / -1;\r\n    color: white;\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-size: clamp(1rem, 0.8475rem + 0.6780vw, 1.5rem);\r\n    font-weight: bold;\r\n    padding: 1em 4em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    box-shadow: 2px 2px 6px #6b7280;\r\n    background-color: #fb7185;\r\n\r\n}\r\n\r\n.header-container span {\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-weight: bold;\r\n}\r\n\r\n.tab-container {\r\n    display: flex;\r\n    padding-left: 2em;\r\n    gap: 3em;\r\n}\r\n\r\n\r\nli {\r\n    list-style: none;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n    color: #f43f5e;\r\n}\r\n\r\n.icon-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.75em;\r\n}\r\n\r\n.header-icon {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    filter: invert(100%) sepia(0%) saturate(7500%) hue-rotate(307deg) brightness(107%) contrast(101%);\r\n}\r\n\r\n.header-icon:hover {\r\n    cursor: pointer;\r\n    filter: invert(35%) sepia(73%) saturate(2798%) hue-rotate(328deg) brightness(99%) contrast(94%);\r\n}\r\n\r\n.header-button,\r\n.body-button {\r\n    color: white;\r\n    background-color: orange;\r\n    height: 2.5rem;\r\n    width: 9rem;\r\n    border-radius: 20px;\r\n    border: none;\r\n    font-weight: bold;\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.header-button:hover,\r\n.body-button:hover {\r\n    cursor: pointer;\r\n    background-color: #f43f5e;\r\n    box-shadow: 0px 0px 15px lightcyan;\r\n}\r\n\r\n[data-tab] {\r\n    display: none;\r\n}\r\n\r\n\r\n[data-tab=\"1\"].active {\r\n    grid-row: 2 / -1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5em;\r\n    margin-top: 5%;\r\n    padding: 1em 96px;\r\n    color: white;\r\n\r\n}\r\n\r\n#body-title {\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-size: 3.5rem;\r\n}\r\n\r\n.body-description {\r\n    font-size: 1.5rem;\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    max-width: 65ch;\r\n}\r\n\r\n\r\n[data-tab=\"2\"].active {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(102, 102, 102, 0.6);\r\n\r\n\r\n}\r\n\r\n.menu-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, minmax(auto, 1fr));\r\n    grid-auto-rows: repeat(3, minmax(auto, 1fr));\r\n    grid-gap: 0.5em;\r\n    padding: 1.5em;\r\n    width: 100%;\r\n\r\n}\r\n\r\n.card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 250px;\r\n    width: 400px;\r\n    border-radius: 20px;\r\n    border: 2px solid black;\r\n    background-color: #fecdd3;\r\n    padding: 1em;\r\n    gap: 1.5em;\r\n}\r\n\r\n.card img {\r\n    width: 200px;\r\n    height: 150px;\r\n}\r\n\r\n.card p {\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n}\r\n\r\n\r\n.card:hover img {\r\n    cursor: pointer;\r\n    animation: tilt-shaking 0.25s infinite;\r\n}\r\n\r\n.card:hover {\r\n    cursor: pointer;\r\n    background-color: rgba(102, 102, 102, 0.6);\r\n}\r\n\r\n@keyframes tilt-shaking {\r\n    0% {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    25% {\r\n        transform: rotate(5deg);\r\n    }\r\n\r\n    50% {\r\n        transform: rotate(0eg);\r\n    }\r\n\r\n    75% {\r\n        transform: rotate(-5deg);\r\n    }\r\n\r\n    100% {\r\n        transform: rotate(0deg);\r\n    }\r\n}\r\n\r\n\r\n\r\n[data-tab=\"3\"].active {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    color: white;\r\n}\r\n\r\n\r\n.about-container {\r\n    grid-column: 1;\r\n    grid-row: 1 / 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1.5em;\r\n    padding: 2em;\r\n}\r\n\r\n.about-container h1 {\r\n    font-size: clamp(1.5rem, 1.0500rem + 2.0000vw, 3rem);\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.about-container p {\r\n    font-family: InterTight, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    font-size: clamp(1rem, 0.7000rem + 1.3333vw, 2rem);\r\n    max-width: 50ch;\r\n}\r\n\r\n\r\n.location-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1.5em;\r\n    padding: 2em;\r\n    grid-column: 2;\r\n    grid-row: 1 / 3;\r\n}\r\n\r\n.location-info-container {\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    background-color: #fecdd3;\r\n    border-radius: 10px;\r\n    border: 2px solid black;\r\n    text-align: center;\r\n}\r\n\r\n.map-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.map-container h1 {\r\n    font-family: New Cursive, 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n}"],sourceRoot:""}]);const g=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);t&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},731:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.FORMAT_PLAIN=e.FORMAT_HTML=e.FORMATS=void 0;var r="html";e.FORMAT_HTML=r;var t="plain";e.FORMAT_PLAIN=t;var a=[r,t];e.FORMATS=a},670:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LINE_ENDINGS=void 0,e.LINE_ENDINGS={POSIX:"\n",WIN32:"\r\n"}},3:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.SUPPORTED_PLATFORMS=void 0,e.SUPPORTED_PLATFORMS={DARWIN:"darwin",LINUX:"linux",WIN32:"win32"}},755:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UNIT_WORDS=e.UNIT_WORD=e.UNIT_SENTENCES=e.UNIT_SENTENCE=e.UNIT_PARAGRAPHS=e.UNIT_PARAGRAPH=e.UNITS=void 0;var r="words";e.UNIT_WORDS=r;var t="word";e.UNIT_WORD=t;var a="sentences";e.UNIT_SENTENCES=a;var o="sentence";e.UNIT_SENTENCE=o;var i="paragraphs";e.UNIT_PARAGRAPHS=i;var c="paragraph";e.UNIT_PARAGRAPH=c;var d=[r,t,a,o,i,c];e.UNITS=d},749:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.WORDS=void 0,e.WORDS=["ad","adipisicing","aliqua","aliquip","amet","anim","aute","cillum","commodo","consectetur","consequat","culpa","cupidatat","deserunt","do","dolor","dolore","duis","ea","eiusmod","elit","enim","esse","est","et","eu","ex","excepteur","exercitation","fugiat","id","in","incididunt","ipsum","irure","labore","laboris","laborum","Lorem","magna","minim","mollit","nisi","non","nostrud","nulla","occaecat","officia","pariatur","proident","qui","quis","reprehenderit","sint","sit","sunt","tempor","ullamco","ut","velit","veniam","voluptate"]},380:(n,e,r)=>{e.fH=void 0;var t,a=r(731),o=r(755),i=r(749),c=(t=r(935))&&t.__esModule?t:{default:t};e.fH=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.count,r=void 0===e?1:e,t=n.format,d=void 0===t?a.FORMAT_PLAIN:t,s=n.paragraphLowerBound,A=void 0===s?3:s,u=n.paragraphUpperBound,l=void 0===u?7:u,f=n.random,m=n.sentenceLowerBound,p=void 0===m?5:m,g=n.sentenceUpperBound,h=void 0===g?15:g,C=n.units,b=void 0===C?o.UNIT_SENTENCES:C,I=n.words,v=void 0===I?i.WORDS:I,y=n.suffix,B=void 0===y?"":y,w={random:f,sentencesPerParagraph:{max:l,min:A},words:v,wordsPerSentence:{max:h,min:p}},x=new c.default(w,d,B);switch(b){case o.UNIT_PARAGRAPHS:case o.UNIT_PARAGRAPH:return x.generateParagraphs(r);case o.UNIT_SENTENCES:case o.UNIT_SENTENCE:return x.generateSentences(r);case o.UNIT_WORDS:case o.UNIT_WORD:return x.generateWords(r);default:return""}}},935:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t,a=r(731),o=r(670),i=(t=r(140))&&t.__esModule?t:{default:t},c=r(270);function d(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function s(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function A(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}var u=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a.FORMAT_PLAIN,t=arguments.length>2?arguments[2]:void 0;if(d(this,n),this.format=r,this.suffix=t,A(this,"generator",void 0),-1===a.FORMATS.indexOf(r.toLowerCase()))throw new Error("".concat(r," is an invalid format. Please use ").concat(a.FORMATS.join(" or "),"."));this.generator=new i.default(e)}var e,r;return e=n,(r=[{key:"getLineEnding",value:function(){return this.suffix?this.suffix:!(0,c.isReactNative)()&&(0,c.isNode)()&&(0,c.isWindows)()?o.LINE_ENDINGS.WIN32:o.LINE_ENDINGS.POSIX}},{key:"formatString",value:function(n){return this.format===a.FORMAT_HTML?"<p>".concat(n,"</p>"):n}},{key:"formatStrings",value:function(n){var e=this;return n.map((function(n){return e.formatString(n)}))}},{key:"generateWords",value:function(n){return this.formatString(this.generator.generateRandomWords(n))}},{key:"generateSentences",value:function(n){return this.formatString(this.generator.generateRandomParagraph(n))}},{key:"generateParagraphs",value:function(n){var e=this.generator.generateRandomParagraph.bind(this.generator);return this.formatStrings((0,c.makeArrayOfStrings)(n,e)).join(this.getLineEnding())}}])&&s(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),n}();e.default=u},140:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=r(749),a=r(270);function o(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function i(n,e){for(var r=0;r<e.length;r++){var t=e[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function c(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}var d=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.sentencesPerParagraph,a=void 0===r?{max:7,min:3}:r,i=e.wordsPerSentence,d=void 0===i?{max:15,min:5}:i,s=e.random,A=(e.seed,e.words),u=void 0===A?t.WORDS:A;if(o(this,n),c(this,"sentencesPerParagraph",void 0),c(this,"wordsPerSentence",void 0),c(this,"random",void 0),c(this,"words",void 0),a.min>a.max)throw new Error("Minimum number of sentences per paragraph (".concat(a.min,") cannot exceed maximum (").concat(a.max,")."));if(d.min>d.max)throw new Error("Minimum number of words per sentence (".concat(d.min,") cannot exceed maximum (").concat(d.max,")."));this.sentencesPerParagraph=a,this.words=u,this.wordsPerSentence=d,this.random=s||Math.random}var e,r;return e=n,(r=[{key:"generateRandomInteger",value:function(n,e){return Math.floor(this.random()*(e-n+1)+n)}},{key:"generateRandomWords",value:function(n){var e=this,r=this.wordsPerSentence,t=r.min,o=r.max,i=n||this.generateRandomInteger(t,o);return(0,a.makeArrayOfLength)(i).reduce((function(n,r){return"".concat(e.pluckRandomWord()," ").concat(n)}),"").trim()}},{key:"generateRandomSentence",value:function(n){return"".concat((0,a.capitalize)(this.generateRandomWords(n)),".")}},{key:"generateRandomParagraph",value:function(n){var e=this,r=this.sentencesPerParagraph,t=r.min,o=r.max,i=n||this.generateRandomInteger(t,o);return(0,a.makeArrayOfLength)(i).reduce((function(n,r){return"".concat(e.generateRandomSentence()," ").concat(n)}),"").trim()}},{key:"pluckRandomWord",value:function(){var n=this.words.length-1,e=this.generateRandomInteger(0,n);return this.words[e]}}])&&i(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),n}();e.default=d},569:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=function(n){var e=n.trim();return e.charAt(0).toUpperCase()+e.slice(1)}},270:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"capitalize",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isNode",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(e,"isReactNative",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(e,"isWindows",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(e,"makeArrayOfLength",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(e,"makeArrayOfStrings",{enumerable:!0,get:function(){return d.default}});var t=s(r(569)),a=s(r(984)),o=s(r(97)),i=s(r(606)),c=s(r(318)),d=s(r(490));function s(n){return n&&n.__esModule?n:{default:n}}},984:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=function(){return!!n.exports}},97:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=function(){var n=!1;try{n="ReactNative"===navigator.product}catch(e){n=!1}return n}},606:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=r(3);e.default=function(){var n=!1;try{n=process.platform===t.SUPPORTED_PLATFORMS.WIN32}catch(e){n=!1}return n}},318:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;e.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return Array.apply(null,Array(n)).map((function(n,e){return e}))}},490:(n,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t,a=(t=r(318))&&t.__esModule?t:{default:t};e.default=function(n,e){return(0,a.default)(n).map((function(){return e()}))}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],c=0;c<n.length;c++){var d=n[c],s=t.base?d[0]+t.base:d[0],A=o[s]||0,u="".concat(s," ").concat(A);o[s]=A+1;var l=r(u),f={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(f);else{var m=a(f,t);t.byIndex=c,e.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=r(o[i]);e[c].references--}for(var d=t(n,a),s=0;s<o.length;s++){var A=r(o[s]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=d}}},777:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},374:(n,e,r)=>{n.exports=r.p+"eb04dce4c2b321e2ef0a.ttf"},33:(n,e,r)=>{n.exports=r.p+"dffaa77a0c339ce2b5da.ttf"},750:(n,e,r)=>{n.exports=r.p+"d642e323ffd6a3c94820.png"}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.m=n,r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.b=document.baseURI||self.location.href,r.nc=void 0,(()=>{var n=r(380);var e=r(379),t=r.n(e),a=r(795),o=r.n(a),i=r(777),c=r.n(i),d=r(565),s=r.n(d),A=r(216),u=r.n(A),l=r(589),f=r.n(l),m=r(772),p={};p.styleTagTransform=f(),p.setAttributes=s(),p.insert=c().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=u(),t()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals,(()=>{const e=document.querySelector("#content");return{createHomePage:function(){return e.append((()=>{const n=document.createElement("header");return n.classList.add("header-container"),n.append((()=>{const n=document.createElement("span");return n.textContent="Waffle World",n})(),(()=>{const n=document.createElement("ul");n.classList.add("tab-container");const e=document.createElement("li"),r=document.createElement("li"),t=document.createElement("li");return e.textContent="Home",e.setAttribute("data-target","#Home"),r.textContent="Menu",r.setAttribute("data-target","#Menu"),t.textContent="About",t.setAttribute("data-target","#About"),n.append(e,r,t),n})(),(()=>{const n=document.createElement("div"),e=document.createElement("img"),r=document.createElement("img"),t=document.createElement("img"),a=document.createElement("button");return n.classList.add("icon-container"),e.classList.add("header-icon"),e.src="../src/icons/account(1).svg",r.classList.add("header-icon"),r.src="../src/icons/cart.svg",t.classList.add("header-icon"),t.src="../src/icons/magnify(1).svg",a.classList.add("header-button"),a.textContent="Order Online",n.append(e,r,t,a),n})()),n})(),(()=>{const e=document.createElement("div"),r=document.createElement("h2"),t=document.createElement("p"),a=document.createElement("button");return e.setAttribute("data-tab",1),e.classList.add("active"),e.setAttribute("id","Home"),r.setAttribute("id","body-title"),t.classList.add("body-description"),a.classList.add("body-button"),r.textContent="Best Waffle Restaurant",t.textContent=(0,n.fH)({count:3}),a.textContent="Order Now",e.append(r,t,a),e})())}}})().createHomePage(),(()=>{const n=document.querySelector("#content"),e=document.createElement("div");return e.setAttribute("data-tab",2),e.setAttribute("id","Menu"),{createMenu:()=>n.append((()=>{const n=document.createElement("div"),r=[];for(let e=0;e<6;e++){const t=document.createElement("img"),a=document.createElement("p");r.push(document.createElement("div")),r[e].classList.add("card"),r[e].classList.add(`${e}`),r[e].append(t,a),n.append(r[e])}return r[0].firstChild.src="../src/icons/waffles.png",r[0].lastChild.textContent="Belgian Waffles",r[1].firstChild.src="../src/icons/waffleButter.png",r[1].lastChild.textContent="Waffle with butter",r[2].firstChild.src="../src/icons/waffles-no-butter.png",r[2].lastChild.textContent="Waffle w/o butter",r[3].firstChild.src="../src/icons/waffeStrawberry.png",r[3].lastChild.textContent="Strawberry Waffles",r[4].firstChild.src="../src/icons/waffle-cup-ice-cream.png",r[4].lastChild.textContent="Ice Cream Waffle Cup",r[5].firstChild.src="../src/icons/blueWaffle.png",r[5].lastChild.textContent="Blue Waffles",n.classList.add("menu-container"),e.append(n),e})())}})().createMenu(),(()=>{const e=document.querySelector("#content"),r=document.createElement("div");return r.setAttribute("data-tab",3),r.setAttribute("id","About"),{createAboutPage:()=>(r.append((()=>{const e=document.createElement("div"),r=document.createElement("h1"),t=document.createElement("p");return e.classList.add("about-container"),r.textContent="About Us",t.textContent=(0,n.fH)({count:8}),e.append(r,t),e})(),(()=>{const n=document.createElement("div"),e=document.createElement("div"),r=document.createElement("p"),t=document.createElement("p"),a=document.createElement("p"),o=document.createElement("div"),i=document.createElement("h1"),c=document.createElement("iframe");return n.classList.add("location-container"),e.classList.add("location-info-container"),o.classList.add("map-container"),c.src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d88559.1067584717!2d-104.8630321617521!3d38.86949427843607!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8713412ea1e6d22b%3A0x418eeb92f5e86b13!2sColorado%20Springs%2C%20CO!5e0!3m2!1sen!2sus!4v1665878180693!5m2!1sen!2sus",c.width="600",c.height="450",c.style.border="0",c.allowFullScreen="",c.loading="lazy",c.referrerPolicy="no-referrer-when-downgrade",r.textContent="Business Hours",t.textContent="Monday - Friday",a.textContent="9:00AM - 5:00PM",i.textContent="Location",o.append(i,c),e.append(r,t,a),n.append(e,o),n})()),e.append(r))}})().createAboutPage();const g=document.querySelectorAll("[data-tab]"),h=document.querySelectorAll("[data-target]");console.log(g),h.forEach((n=>{n.addEventListener("click",(()=>{const e=document.querySelector(n.dataset.target);g.forEach((n=>{n.classList.remove("active")})),h.forEach((n=>{n.classList.remove("active")})),n.classList.add("active"),e.classList.add("active")}))})),console.log("this is working")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,